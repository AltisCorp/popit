define(['jquery'], function (jQuery) { // AMD definition

  /*1.0.3*/
  
  (function(e) {
      e.fn.mailcheck = function(e, t) {
          var n = "yahoo.com,google.com,hotmail.com,gmail.com,me.com,aol.com,mac.com,live.com,comcast.net,googlemail.com,msn.com,hotmail.co.uk,yahoo.co.uk,facebook.com,verizon.net,sbcglobal.net,att.net,gmx.com,mail.com".split(","), r = "co.uk,com,net,org,info,edu,gov,mil".split(",");
          if ("object" == typeof e && void 0 === t) e.domains = e.domains || n; else {
              var i = e, e = t;
              e.domains = i || n;
          }
          e.topLevelDomains = e.topLevelDomains || r, e.distanceFunction = Kicksend.sift3Distance, (n = Kicksend.mailcheck.suggest(encodeURI(this.val()), e.domains, e.topLevelDomains, e.distanceFunction)) ? e.suggested && e.suggested(this, n) : e.empty && e.empty(this);
      };
  })(jQuery);
  
  var Kicksend = {
      mailcheck: {
          threshold: 3,
          suggest: function(e, t, n, r) {
              e = e.toLowerCase(), e = this.splitEmail(e);
              if (t = this.findClosestDomain(e.domain, t, r)) {
                  if (t != e.domain) return {
                      address: e.address,
                      domain: t,
                      full: e.address + "@" + t
                  };
              } else if (n = this.findClosestDomain(e.topLevelDomain, n), e.domain && n && n != e.topLevelDomain) return t = e.domain, t = t.substring(0, t.lastIndexOf(e.topLevelDomain)) + n, {
                  address: e.address,
                  domain: t,
                  full: e.address + "@" + t
              };
              return !1;
          },
          findClosestDomain: function(e, t, n) {
              var r, i = 99, s = null;
              if (!e || !t) return !1;
              n || (n = this.sift3Distance);
              for (var o = 0; o < t.length; o++) {
                  if (e === t[o]) return e;
                  r = n(e, t[o]), r < i && (i = r, s = t[o]);
              }
              return i <= this.threshold && null !== s ? s : !1;
          },
          sift3Distance: function(e, t) {
              if (null == e || 0 === e.length) return null == t || 0 === t.length ? 0 : t.length;
              if (null == t || 0 === t.length) return e.length;
              for (var n = 0, r = 0, i = 0, s = 0; n + r < e.length && n + i < t.length; ) {
                  if (e.charAt(n + r) == t.charAt(n + i)) s++; else for (var o = i = r = 0; 5 > o; o++) {
                      if (n + o < e.length && e.charAt(n + o) == t.charAt(n)) {
                          r = o;
                          break;
                      }
                      if (n + o < t.length && e.charAt(n) == t.charAt(n + o)) {
                          i = o;
                          break;
                      }
                  }
                  n++;
              }
              return (e.length + t.length) / 2 - s;
          },
          splitEmail: function(e) {
              e = e.split("@");
              if (2 > e.length) return !1;
              for (var t = 0; t < e.length; t++) if ("" === e[t]) return !1;
              var n = e.pop(), r = n.split("."), i = "";
              if (0 == r.length) return !1;
              if (1 == r.length) i = r[0]; else {
                  for (t = 1; t < r.length; t++) i += r[t] + ".";
                  2 <= r.length && (i = i.substring(0, i.length - 1));
              }
              return {
                  topLevelDomain: i,
                  domain: n,
                  address: e.join("@")
              };
          }
      }
  };
  
}); // end of AMD definition
